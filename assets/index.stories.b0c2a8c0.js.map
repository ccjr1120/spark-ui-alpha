{"version":3,"file":"index.stories.b0c2a8c0.js","sources":["../../../packages/components/Base/Date/TimePicker/index.tsx"],"sourcesContent":["import dayjs from 'dayjs/esm/index'\nimport { useEffect, useState } from 'react';\nimport Wrapper from '../components/Wrapper';\nimport CalendarOrClockPicker from '../components/CalendarOrClockPicker';\nimport KeyboardDateInput from '../components/KeyboardDateInput';\nimport Input from '../../Input';\nimport TimePickerProps from './interface';\n\nconst renderInputDefault = ({ togglePopper, ...args }) => (\n  <Input\n    endAdornment={\n      <span\n        style={{ padding: '0 12px', cursor: 'pointer' }}\n        onClick={togglePopper}\n      >\n        ‚è∞\n      </span>\n    }\n    {...args}\n  />\n);\nfunction TimePicker(props: TimePickerProps) {\n  const {\n    label,\n    value,\n    onChange,\n    valueFormat = 'HH:mm',\n    views = ['hour', 'minute'],\n    renderInput,\n    ...others\n  } = props;\n  const inputProps = {\n    label,\n    value,\n    valueFormat,\n    inputType: 'time',\n    renderInput: renderInput || renderInputDefault,\n  };\n  const [showPopper, setShowPopper] = useState(false);\n  const togglePopper = () => {\n    setShowPopper((v) => !v);\n  };\n  const [date, setDate] = useState(dayjs(value, valueFormat));\n  useEffect(() => {\n    if (!dayjs(value, valueFormat).isSame(date)) {\n      let dayjsDate = dayjs(value, valueFormat);\n      if (!dayjsDate.isValid()) {\n        dayjsDate = dayjs();\n      }\n      setDate(dayjsDate);\n    }\n  }, [value, valueFormat]);\n  const handleChange = (newDate, state) => {\n    setDate(newDate);\n    if (state === 'finish') {\n      onChange(newDate.format(valueFormat));\n      togglePopper();\n    }\n  };\n  return (\n    <Wrapper\n      showPopper={showPopper}\n      togglePopper={togglePopper}\n      inputProps={inputProps}\n      KeyboardDateInputComponent={KeyboardDateInput}\n    >\n      <CalendarOrClockPicker\n        views={views}\n        date={date}\n        onChange={handleChange}\n        {...others}\n      />\n    </Wrapper>\n  );\n}\n\nexport default TimePicker;\n"],"names":["renderInputDefault","togglePopper","args","Input","padding","cursor","TimePicker","props","label","value","onChange","valueFormat","views","renderInput","others","inputProps","inputType","showPopper","setShowPopper","useState","v","date","setDate","dayjs","useEffect","isSame","dayjsDate","isValid","Wrapper","KeyboardDateInput","CalendarOrClockPicker","newDate","state","format"],"mappings":"6TAQA,MAAMA,EAAqB,CAAC,CAAEC,aAAAA,KAAiBC,CAAnB,MACzBC,EAAD,CACE,eACE,OAAA,CACE,MAAO,CAAEC,QAAS,SAAUC,OAAQ,SAA7B,EACP,QAASJ,EAFX,SAAA,QAAA,CAFJ,EAAA,GASMC,CATN,CADF,EAaA,SAASI,EAAWC,EAAwB,CACpC,KAAA,CACJC,MAAAA,EACAC,MAAAA,EACAC,SAAAA,EACAC,YAAAA,EAAc,QACdC,MAAAA,EAAQ,CAAC,OAAQ,QAAT,EACRC,YAAAA,KACGC,CACDP,EAAAA,EACEQ,EAAa,CACjBP,MAAAA,EACAC,MAAAA,EACAE,YAAAA,EACAK,UAAW,OACXH,YAAaA,GAAeb,CAAAA,EAExB,CAACiB,EAAYC,CAAb,EAA8BC,mBAAS,EAAD,EACtClB,EAAe,IAAM,CACVmB,EAAAA,GAAM,CAACA,CAAT,CAAA,EAET,CAACC,EAAMC,CAAP,EAAkBH,EAAAA,QAAAA,SAASI,EAAMd,EAAOE,CAAR,CAAN,EAChCa,OAAAA,EAAAA,QAAAA,UAAU,IAAM,CACd,GAAI,CAACD,EAAMd,EAAOE,CAAR,EAAqBc,OAAOJ,CAAjC,EAAwC,CACvCK,IAAAA,EAAYH,EAAMd,EAAOE,CAAR,EAChBe,EAAUC,YACbD,EAAYH,EAAZ,GAEFD,EAAQI,CAAD,CACR,CAAA,EACA,CAACjB,EAAOE,CAAR,CARM,IAiBNiB,EAAD,CACE,WAAAX,EACA,aAAAhB,EACA,WAAAc,EACA,2BAA4Bc,EAJ9B,WAMGC,EAAD,CACE,MAAAlB,EACA,KAAAS,EACA,SAjBe,CAACU,EAASC,IAAU,CACvCV,EAAQS,CAAD,EACHC,IAAU,WACHD,EAAAA,EAAQE,OAAOtB,CAAf,CAAD,EACIV,IACb,EASC,GAIMa,CAAAA,CAJN,CAAA,CAPJ,CAeD;;;;;;;;;;;;;;;;;"}