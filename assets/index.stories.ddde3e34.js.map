{"version":3,"file":"index.stories.ddde3e34.js","sources":["../../../packages/hooks/useContainerRect/index.ts","../../../packages/components/Display/Collapse/CollapseContext.ts","../../../packages/components/Display/Collapse/Panel/index.tsx","../../../packages/components/Display/Collapse/index.tsx"],"sourcesContent":["import { MutableRefObject, useEffect, useMemo, useState } from 'react';\n\ninterface RectTypes {\n  height?: number;\n}\n\nexport const useContainerRect = (ref: MutableRefObject<HTMLElement>) => {\n  const [rect, setRect] = useState<RectTypes>({});\n\n  useEffect(() => {\n    if (ref.current) {\n      const { height } = ref.current.getBoundingClientRect();\n      setRect({ height });\n    }\n  }, [ref]);\n\n  return rect;\n};\n","import * as React from 'react';\n\nexport interface CollapseContextType {\n  sourceValue: Array<number | string> | number | string;\n  inlineValue: Array<number | string>;\n  onChange: (\n    clickName: number | string,\n    nextVal: Array<number | string> | number | string\n  ) => void;\n}\n\nconst CollapseContext = React.createContext<CollapseContextType | null>(null);\n\nexport function useCollapseContext(): CollapseContextType {\n  return React.useContext(CollapseContext);\n}\n\nexport default CollapseContext;\n","import { useClassName, useContainerRect, useNamespace } from '@spark-ui/hooks';\nimport { useCallback, useMemo, useRef } from 'react';\nimport { useCollapseContext } from '../CollapseContext';\nimport { PanelProps } from './interface';\nimport './index.less';\n\nfunction Panel(props: PanelProps) {\n  const ctx = useCollapseContext();\n  if (ctx == null) {\n    throw new Error('no CollapseContext provied');\n  }\n  const { sourceValue, inlineValue, onChange } = ctx;\n  const { name, header, children } = props;\n  const contentRef = useRef<HTMLDivElement>();\n  const { height } = useContainerRect(contentRef);\n  const isActive = inlineValue.some((i) => i === name);\n\n  const ns = useNamespace('collapse-panel');\n  const clsNames = useClassName([ns.b()]);\n  const headerClsNames = useClassName([ns.e('header')]);\n  const contentClsNames = useClassName([ns.e('content')]);\n\n  const handleChange = useCallback(() => {\n    let nextVal;\n    if (Array.isArray(sourceValue)) {\n      if (sourceValue.some((i) => i === name)) {\n        nextVal = sourceValue.filter((i) => i !== name);\n      } else {\n        nextVal = [...sourceValue, name];\n      }\n    } else {\n      nextVal = name === sourceValue ? null : name;\n    }\n    onChange(name, nextVal);\n  }, [sourceValue, name, onChange]);\n\n  return (\n    <div className={clsNames}>\n      <div className={headerClsNames} onClick={handleChange}>\n        {header}\n      </div>\n      <main\n        className={contentClsNames}\n        style={{ height: `${isActive ? height : 1}px` }}\n      >\n        <div ref={contentRef}>{children}</div>\n      </main>\n    </div>\n  );\n}\n\nexport default Panel;\n","import { useMemo } from 'react';\nimport { useNamespace, useClassName } from '@spark-ui/hooks';\nimport { CollapseProps } from './interface';\nimport Panel from './Panel';\nimport './index.less';\nimport CollapseContext from './CollapseContext';\n\nfunction Collapse(props: CollapseProps) {\n  const { children, value, onChange } = props;\n\n  const ns = useNamespace('collapse');\n  const clsNames = useClassName([ns.b()]);\n  const contextValues = useMemo(\n    () => ({\n      sourceValue: value,\n      inlineValue: Array.isArray(value) ? value : [value],\n      onChange,\n    }),\n    [value, onChange]\n  );\n\n  return (\n    <CollapseContext.Provider value={contextValues}>\n      <div className={clsNames}>\n        <div className={ns.m('content')}>{children}</div>\n      </div>\n    </CollapseContext.Provider>\n  );\n}\n\nCollapse.Panel = Panel;\n\nexport { Panel };\nexport default Collapse;\n"],"names":["useContainerRect","ref","rect","setRect","useState","useEffect","height","CollapseContext","React.createContext","useCollapseContext","React.useContext","Panel","props","ctx","Error","sourceValue","inlineValue","onChange","name","header","children","contentRef","useRef","isActive","some","i","ns","useNamespace","clsNames","useClassName","b","headerClsNames","e","contentClsNames","handleChange","useCallback","nextVal","Array","isArray","filter","_jsx","Collapse","value","contextValues","useMemo","m"],"mappings":"wIAMa,MAAAA,EAAoBC,GAAuC,CACtE,KAAM,CAACC,EAAMC,CAAO,EAAIC,EAAA,QAAA,SAAoB,CAAE,CAAA,EAE9CC,OAAAA,EAAAA,QAAAA,UAAU,IAAM,CACd,GAAIJ,EAAI,QAAS,CACf,KAAM,CAAE,OAAAK,CAAW,EAAAL,EAAI,QAAQ,sBAAsB,EAC7CE,EAAA,CAAE,OAAAG,EAAQ,CACpB,CAAA,EACC,CAACL,CAAG,CAAC,EAEDC,CACT,ECNMK,EAAkBC,EAAAA,QAAAA,cAAgD,IAAI,EAErE,SAASC,GAA0C,CACjD,OAAAC,EAAAA,QAAAA,WAAiBH,CAAe,CACzC,CCTA,SAASI,EAAMC,EAAmB,CAChC,MAAMC,EAAMJ,IACZ,GAAII,GAAO,KACH,MAAA,IAAIC,MAAM,4BAAV,EAEF,KAAA,CAAEC,YAAAA,EAAaC,YAAAA,EAAaC,SAAAA,CAAaJ,EAAAA,EACzC,CAAEK,KAAAA,EAAMC,OAAAA,EAAQC,SAAAA,CAAaR,EAAAA,EAC7BS,EAAaC,EAAAA,QAAAA,SACb,CAAEhB,OAAAA,CAAAA,EAAWN,EAAiBqB,CAAD,EAC7BE,EAAWP,EAAYQ,KAAMC,GAAMA,IAAMP,CAA9B,EAEXQ,EAAKC,EAAa,gBAAD,EACjBC,EAAWC,EAAa,CAACH,EAAGI,EAAAA,CAAJ,CAAD,EACvBC,EAAiBF,EAAa,CAACH,EAAGM,EAAE,QAAL,CAAD,CAAD,EAC7BC,EAAkBJ,EAAa,CAACH,EAAGM,EAAE,SAAL,CAAD,CAAD,EAE9BE,EAAeC,EAAAA,QAAAA,YAAY,IAAM,CACjCC,IAAAA,EACAC,MAAMC,QAAQvB,CAAd,EACEA,EAAYS,KAAYC,GAAAA,IAAMP,CAA9B,EACFkB,EAAUrB,EAAYwB,OAAcd,GAAAA,IAAMP,CAAhC,EAEAkB,EAAA,CAAC,GAAGrB,EAAaG,CAAjB,EAGFA,EAAAA,IAASH,EAAc,KAAOG,EAE1CD,EAASC,EAAMkB,CAAP,CACP,EAAA,CAACrB,EAAaG,EAAMD,CAApB,CAZ6B,EAchC,SACE,MAAA,CAAK,UAAWW,EAAhB,SACE,CAAAY,EAAA,MAAA,CAAK,UAAWT,EAAgB,QAASG,EAAzC,SACGf,CAAAA,CADH,EAGAqB,EAAA,OAAA,CACE,UAAWP,EACX,MAAO,CAAE3B,OAAS,GAAEiB,EAAWjB,EAAS,KAAjC,EAFT,WAIE,MAAA,CAAK,IAAKe,EAAV,SAAAD,CAAA,CAAA,CAAA,CARJ,CAAA,CAAA,CADF,CAaD,CC1CD,SAASqB,EAAS7B,EAAsB,CAChC,KAAA,CAAEQ,SAAAA,EAAUsB,MAAAA,EAAOzB,SAAAA,CAAaL,EAAAA,EAEhCc,EAAKC,EAAa,UAAD,EACjBC,EAAWC,EAAa,CAACH,EAAGI,EAAAA,CAAJ,CAAD,EACvBa,EAAgBC,EAAAA,QAAAA,QACpB,KAAO,CACL7B,YAAa2B,EACb1B,YAAaqB,MAAMC,QAAQI,CAAd,EAAuBA,EAAQ,CAACA,CAAD,EAC5CzB,SAAAA,CAEF,GAAA,CAACyB,EAAOzB,CAAR,CAN2B,EAU3B,OAAAuB,EAACjC,EAAgB,SAAjB,CAA0B,MAAOoC,EAAjC,WACE,MAAA,CAAK,UAAWf,EAAhB,WACE,MAAA,CAAK,UAAWF,EAAGmB,EAAE,SAAL,EAAhB,SAAAzB,CAAA,CAAA,CAAA,CADF,CAAA,CAFJ,CAOD,CAEDqB,EAAS9B,MAAQA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}