{"version":3,"file":"index.stories.45b6e88d.js","sources":["../../../packages/components/Base/FormController/FormControlContext.ts","../../../packages/components/Base/FormController/FormLabel.tsx","../../../packages/components/Base/FormController/FormHelperText.tsx","../../../packages/components/Base/FormController/index.tsx","../../../packages/components/Base/Input/InputBase.tsx","../../../packages/components/Base/Input/InputAdornment.tsx","../../../packages/components/Base/Input/index.tsx"],"sourcesContent":["import PropTypes from 'prop-types';\nimport * as React from 'react';\n\nexport interface FormControlContextType {\n  hasLabel: boolean;\n  isError: boolean;\n  filled: boolean;\n  hasStartAdornment: boolean;\n  focused: boolean;\n  onFocus: PropTypes.func;\n  onBlur: PropTypes.func;\n}\n\nconst FormControlContext = React.createContext<FormControlContextType | null>(\n  null\n);\n\nexport function useFormControl() {\n  return React.useContext(FormControlContext);\n}\n\nexport default FormControlContext;\n","import { useClassName, useNamespace } from '@spark-ui/hooks';\nimport { useFormControl } from '../FormController';\nimport { FormLabelProps } from './interface';\n\nfunction FormLabel(props: FormLabelProps) {\n  const { shrink: shrinkProp, children } = props;\n  const { isError, focused, filled, hasStartAdornment } = useFormControl();\n  const ns = useNamespace('form-label');\n  let shrink = shrinkProp;\n  if (shrink === undefined) {\n    shrink = filled || focused || hasStartAdornment;\n  }\n  const cls = useClassName([ns.b(), ns.useIs('shrink', shrink)]);\n  return <div className={cls}>{children}</div>;\n}\n\nexport default FormLabel;\n","import { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport { useNamespace } from '@spark-ui/hooks';\nimport { useFormControl } from './FormControlContext';\n\nfunction FormHelperText(props) {\n  const ns = useNamespace('form-helper-text');\n  const { isError } = useFormControl();\n  return <p className={ns.b()} {...props} />;\n}\n\nexport default FormHelperText;\n","import { useMemo, useState } from 'react';\nimport { useNamespace } from '@spark-ui/hooks';\nimport FormControlContext, {\n  FormControlContextType,\n  useFormControl,\n} from './FormControlContext';\nimport FormControllerProps from './interface';\nimport FormLabel from './FormLabel';\nimport FormHelperText from './FormHelperText';\nimport './index.less';\n\nfunction FormController(props: FormControllerProps) {\n  const ns = useNamespace('form-controller');\n  const { value, children, isError, hasStartAdornment, hasLabel, className } =\n    props;\n  const [focusedState, setFocused] = useState(false);\n  const contextVals: FormControlContextType = useMemo(\n    () => ({\n      hasLabel,\n      isError,\n      filled: !!value,\n      hasStartAdornment,\n      focused: focusedState,\n      onFocus: () => {\n        setFocused(true);\n      },\n      onBlur: () => {\n        setFocused(false);\n      },\n    }),\n    [focusedState, hasLabel, isError, hasStartAdornment, value]\n  );\n  return (\n    <FormControlContext.Provider value={contextVals}>\n      <div className={`${ns.m('wrap')} ${className}`}>{children}</div>\n    </FormControlContext.Provider>\n  );\n}\n\nexport { useFormControl, FormLabel, FormHelperText };\nexport default FormController;\n","import { useNamespace } from '@spark-ui/hooks';\nimport { useFormControl } from '../FormController';\nimport './index.less';\nimport { InputBaseProps } from './interface';\n\nfunction InputBase(props: InputBaseProps) {\n  const ns = useNamespace('input-base');\n  const { value, onChange, placeholder } = props;\n  const formControl = useFormControl();\n  const { hasLabel, focused, onFocus, onBlur } = formControl;\n  const handleChange: React.ChangeEventHandler<HTMLInputElement> = (e) => {\n    if (onChange) {\n      onChange(e.target.value, e);\n    }\n  };\n  return (\n    <input\n      className={ns.b()}\n      value={value}\n      onChange={handleChange}\n      placeholder={hasLabel && !focused ? '' : placeholder}\n      {...{ onFocus, onBlur }}\n    />\n  );\n}\n\nexport default InputBase;\n","import { useClassName, useNamespace } from '@spark-ui/hooks';\nimport { useFormControl } from '../FormController';\nimport './index.less';\nimport { InputAdornmentProps } from './interface';\n\nfunction InputAdornment({ children, ...others }: InputAdornmentProps) {\n  const ns = useNamespace('input-adornment');\n  const { focused } = useFormControl();\n  const cls = useClassName([ns.b(), ns.useIs('focus', focused)]);\n  return <div className={cls}>{children}</div>;\n}\n\nexport default InputAdornment;\n","import { useNamespace } from '@spark-ui/hooks';\nimport InputBase from './InputBase';\nimport FormController, { FormLabel, FormHelperText } from '../FormController';\nimport InputAdornment from './InputAdornment';\nimport InputProps from './interface';\nimport './index.less';\n\nfunction Input(props: InputProps) {\n  const {\n    label,\n    placeholder,\n    isError,\n    helperText,\n    value,\n    onChange,\n    startAdornment,\n    endAdornment,\n  } = props;\n  const ns = useNamespace('input');\n  return (\n    <FormController\n      {...{\n        value,\n        isError,\n        hasLabel: !!label,\n        hasStartAdornment: !!startAdornment,\n        className: ns.b(),\n      }}\n    >\n      {label && <FormLabel>{label}</FormLabel>}\n      <InputAdornment>\n        {startAdornment}\n        <InputBase {...{ value, onChange, placeholder }} />\n        {endAdornment}\n      </InputAdornment>\n      {helperText && <FormHelperText>{helperText}</FormHelperText>}\n    </FormController>\n  );\n}\n\nexport default Input;\n"],"names":["FormControlContext","React.createContext","useFormControl","React.useContext","FormLabel","props","shrink","shrinkProp","children","isError","focused","filled","hasStartAdornment","ns","useNamespace","undefined","cls","useClassName","b","useIs","FormHelperText","FormController","value","hasLabel","className","focusedState","setFocused","useState","contextVals","useMemo","onFocus","onBlur","_jsx","m","InputBase","onChange","placeholder","formControl","handleChange","e","target","InputAdornment","others","Input","label","helperText","startAdornment","endAdornment","_jsxs"],"mappings":"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"}